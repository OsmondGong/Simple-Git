#!/bin/dash
# outputs error message if .girt was not initiated
if (! test -d .girt)
then
    echo "girt-commit: error: girt repository directory .girt not found"
    exit 1
fi

# ensures number of arguments is valid
if (test $# -gt 3 || test $# -lt 2) 
then
    echo "usage: girt-commit [-a] -m commit-message"
    exit 1
fi

# gets total amount of commits
count=$(ls .girt/repository/ | wc -l)

# causes all files already in the index to have their contents from the current directory added to the index before the commit
if (test $1 = '-a')
then
    for files in .girt/index/*
    do
        fileAdd=$(echo $files | sed "s/.girt\/index\///")
        ../girt-add $fileAdd
    done
fi

# bool to see if there is anything to commit
change=0

# if there is a file in index but not in repository there is something to commit
if (test $(diff -q ".girt/index/" ".girt/repository/$((count-1))/" | wc -l) -gt 0) > /dev/null 2>&1
then
    change=1
fi

# checks if there is anything to commit
for files in .girt/index/*
do
    fileName=$(echo $files | sed "s/.girt\/index\//.girt\/repository\/$((count - 1))\//")
    if (! cmp -s $files $fileName && test -f $files) > /dev/null 2>&1
    then
        change=1
    fi
    if (test $change -eq 1)
    then
        break
    fi
done

# checks if girt-commit usage is correct
if (test $1 = "-m")
then
    if (test $# -ne 2)
    then
        echo "usage: girt-commit [-a] -m commit-message"
        exit 1
    fi
    message="$count $2"
elif (test $1 = "-a")
then
    if (test $2 != "-m" || test $# -ne 3)
    then
        echo "usage: girt-commit [-a] -m commit-message"
        exit 1
    fi
    message="$count $3"
fi

# exits if there is nothing to commit
if (test $change -eq 0)
then
    echo "nothing to commit"
    exit
fi

# store message in file
echo $message >>.girt/message.txt

# creates a directory in repository that stores all files in each commit
mkdir .girt/repository/$count

for files in .girt/index/*
do
    fileName=$(echo $files | sed "s/.girt\/index\//.girt\/repository\/$count\//")
    cp "$files" "$fileName" > /dev/null 2>&1
done

# copy files into commitPath directory where all path of commits are stored
cp .girt/message.txt .girt/commitPath/$count

echo "Committed as commit $count"