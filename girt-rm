#!/bin/dash
# outputs error message if .girt was not initiated
if (! test -d .girt)
then
    echo "girt-rm: error: girt repository directory .girt not found"
    exit 1
fi
# bool for force and cached
force=0
cached=0

# get last commit
count=$(cat .girt/message.txt | cut -d " " -f1 | tail -n 1)

# checks for --force and --cached
for option in $@
do
    if (test $option = '--force')
    then
        force=1
    elif (test $option = '--cached')
    then
        cached=1
    fi
done

# checks for all possible error messages
for files in $@
do
    # gets files in argument and test if file exist in index or current directory
    if (! test $files = '--cached' && ! test $files = '--force' && ( test -f $files || test -f .girt/index/$files))
    then
        # force option is not called
        if (! test $force -eq 1)
        then
            # if there has not been any commits or file in index is different to the file in repository
            if (test $count -eq -1 || ! cmp -s ".girt/index/$files" ".girt/repository/$count/$files") > /dev/null 2>&1
            then
                # if the file in index and current directory are the same and --cached is called then
                # do not call exit
                if (cmp "$files" ".girt/index/$files" && test $cached -eq 1) > /dev/null 2>&1
                then
                    :
                # if file in index and current directory are the same
                elif (cmp -s "$files" ".girt/index/$files") > /dev/null 2>&1
                then
                    echo "girt-rm: error: '$files' has staged changes in the index"
                    exit 1
                # if file is not in index
                elif (! test -f ".girt/index/$files")
                then 
                    echo "girt-rm: error: '$files' is not in the girt repository"
                    exit 1
                # if file in index is different to file in current directory and repository
                else 
                    echo "girt-rm: error: '$files' in index is different to both to the working file and the repository"
                    exit 1
                fi
            fi
            if (test $cached -eq 0)
            then
                # if there has not been any commits or file in index and current directory are not the same
                if (test $count -eq -1 || ! cmp -s "$files" ".girt/index/$files") > /dev/null 2>&1
                then
                    # if file is not in repository
                    if (! test -f ".girt/repository/$count/$files")
                    then
                        echo "girt-rm: error: '$files' is not in the girt repository"
                        exit 1
                    # if file in current directory is not the same in repository
                    else
                        echo "girt-rm: error: '$files' in the repository is different to the working file"
                        exit 1
                    fi
                fi
            fi
        elif (test $force=1 && ! test -f .girt/index/$files)
        then 
            echo "girt-rm: error: '$files' is not in the girt repository"
            exit 1
        fi
    # if file does not exist then output error
    elif (! test $files = '--cached' && ! test $files = '--force' && ! test -f $files && ! test -f .girt/index/$files)
    then 
        echo "girt-rm: error: '$files' is not in the girt repository"
        exit 1
    fi
done
# delete files
for files in $@
do
    if (! test $files = '--cached' && ! test $files = '--force')
    then
        rm ".girt/index/$files" 2>/dev/null
        if (test $cached -eq 0)
        then
            rm $files 2>/dev/null
        fi
    fi
done