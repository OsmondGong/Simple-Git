#!/bin/dash
if (test -z "$(cat .girt/message.txt)") 
then
    echo "girt-branch: error: this command can not be run until after the first commit"
    exit 1
fi
if (test $# -eq 0)
then
    ls -d .girt/branch/* | sed -e "s/.girt\/branch\///g"
    exit
elif (test $# -eq 1)
then
    if (test $1 = '-d')
    then
        echo "girt-branch: error: branch name required"
        exit
    fi
    if (! test $(echo $1 | grep -e '^[a-zA-Z0-9][a-zA-Z0-9_-]*$'))
    then
        echo "girt-branch: error: invalid branch name '$1'"
        exit 1
    fi
    if (test -d .girt/branch/$1)
    then
        echo "girt-branch: error: branch '$1' already exists"
        exit
    fi
    mkdir .girt/branch/$1
    cp .girt/message.txt .girt/branch/$1/message.txt
elif (test $# -eq 2 && test $1 = '-d')
then
    if (test $2 = 'master')
    then
        echo "girt-branch: error: can not delete branch 'master'"
        exit
    elif (test -d .girt/branch/$2)
    then
        if (test "$(cat .girt/branchname.txt)" = "$2") 
        then
            echo "girt-branch: error: internal error error: Cannot delete branch '$2'"
            exit 1
        fi
        commitNo=$(cat .girt/branch/$2/message.txt | cut -d " " -f1 | tail -n 1)

        curCommitNo=$(cat .girt/message.txt | cut -d " " -f1 | tail -n 1)

        currPath=$(tac .girt/commitPath/$curCommitNo | cut -d " " -f1 )
        mergePath=$(tac .girt/commitPath/$commitNo | cut -d " " -f1 )
        comCurr=""

        for comCurr in $currPath
        do
            for comMerg in $mergePath
            do
                if (test $comCurr = $comMerg)
                then
                    commonCommit="$comCurr"
                    break
                elif (test $comCurr -gt $comMerg)
                then
                    break
                fi
            done
            if (test "$comCurr"!="") then
                break
            fi
        done

        if (test "$commonCommit" -eq "$commitNo")
        then
            rm -r .girt/branch/$2
            echo "Deleted branch '$2'"
            exit
        fi
        echo "girt-branch: error: branch '$2' has unmerged changes"
        exit 1
    fi
    echo "girt-branch: error: branch '$2' doesn't exist"
else
    echo "usage: girt-branch [-d] <branch>"
fi

